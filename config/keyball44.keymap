#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&nice_view_spi { cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>; };

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <38 39 40 41 42 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 41 42 43>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        default_bootloader_r {
            bindings = <&bootloader>;
            key-positions = <10 11>;
        };

        default_bootloader_l {
            bindings = <&bootloader>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp GRAVE   &kp Q                &kp W            &kp F                &kp P              &kp B                   &kp J            &kp L               &kp U                 &kp Y             &kp SEMI              &none
&caps_word  &hml LEFT_CONTROL A  &hml LEFT_ALT R  &hml LEFT_COMMAND S  &hml LEFT_SHIFT T  &kp G                   &kp M            &hmr RIGHT_SHIFT N  &hmr RIGHT_COMMAND E  &hmr RIGHT_ALT I  &hmr RIGHT_CONTROL O  &kp SQT
&none       &kp Z                &kp X            &kp C                &kp D              &kp V                   &kp K            &kp H               &kp COMMA             &kp DOT           &kp SLASH             &none
&none       &kp LEFT_COMMAND     &lt 6 ESCAPE     &lt 5 SPACE          &lt 3 TAB                     &lt 2 ENTER  &lt 1 BACKSPACE                                                                                    &kp C_PLAY_PAUSE
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none   &none          &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none                  &none   &none            &none              &none          &none      &bootloader
&none   &kp BACKSLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL              &none   &kp RIGHT_SHIFT  &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RCTRL  &none
&none   &none          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS              &none   &none            &trans             &trans         &none      &none
&trans  &trans         &trans        &kp N0        &kp GRAVE                    &trans  &trans                                                                &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none   &kp CARET    &kp PLUS      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EXCLAMATION              &none   &none            &none              &none          &none              &none
&none   &kp AT_SIGN  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND                &none   &kp RIGHT_SHIFT  &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &none
&none   &trans       &kp DOLLAR    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE                     &none   &none            &trans             &trans         &none              &none
&trans  &trans       &kp PERCENT   &kp UNDERSCORE        &kp HASH                                    &trans  &trans                                                                        &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &none             &none         &none             &none           &none              &none  &kp F1  &kp F2   &kp F3   &kp F4   &none
&none   &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &none              &none  &kp F5  &kp F6   &kp F7   &kp F8   &none
&none   &none             &none         &none             &none           &none              &none  &kp F9  &kp F10  &kp F11  &kp F12  &none
&trans  &trans            &trans        &trans            &trans                     &trans  &none                                     &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &none           &none           &none         &none      &none                 &none          &none      &none  &none      &none      &none
&none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none                 &kp PAGE_UP    &mkp LCLK  &sl 0  &mkp RCLK  &mkp MCLK  &none
&none   &none           &none           &none         &none      &none                 &kp PAGE_DOWN  &none      &none  &none      &none      &none
&trans  &trans          &trans          &trans        &trans                &mkp RCLK  &mkp LCLK                                              &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans            &trans        &trans            &trans          &trans                 &trans      &trans    &trans    &trans        &trans     &trans
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans                 &trans      &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans            &trans        &trans            &trans          &trans                 &trans      &trans    &trans    &trans        &trans     &trans
&trans  &trans            &trans        &trans            &trans                      &kp ENTER  &kp DELETE                                               &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                 &trans     &trans     &trans  &trans     &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans                 &trans     &mkp LCLK  &trans  &mkp RCLK  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans                 &trans     &trans     &trans  &trans     &trans  &trans
&trans       &trans  &trans  &trans  &trans              &mkp RCLK  &mkp LCLK                                        &trans
            >;
        };
    };
};
